)
LegendTitle = "Consumption in MWh"
ggplot2::ggplot()  +
ggplot2::geom_tile(data = heatmap_data
, aes(x = weeknum,
y = tile_ID,
fill = Data,
text = sprintf("Datetime: %s<br>tz: %s<br>Day: %s<br>Value: %f<br>Week: %f<br>ID: %f<br>Diffnum: %f"
,Datetime, tz, weekday, Data, weeknum, tile_ID, diff_num)
)
) +
ggplot2::theme(legend.position = "bottom") +
viridis::scale_fill_viridis(
limits = z_limits,
name = LegendTitle,# TODO: Legend name from function argument
option = 'D', # plasma "D" = viridis
direction = 1,
na.value = na.value.col,
guide = guide_colorbar(
direction = "horizontal",
barheight = unit(2, units = "mm"),
barwidth = unit(50, units = "mm"),
draw.ulim = F,
title.position = 'top',
# some shifting around
title.hjust = 0.5,
label.hjust = 0.5
)) +
# added if else to consider daylight shifting where one sunday has 25 instead of 24 hours
ggplot2::geom_hline(yintercept = (dayfactor+1)*dt_per_day + 2* 1/fac + 0.5,
color = "white") +
ggplot2::geom_point(data = subset(heatmap_data, Datetime %in% first_days),
aes(x = weeknum,y = tile_ID), pch = 3, color = "white") +
ggplot2::facet_wrap('plotyear', ncol = 1) +
ggplot2::scale_x_continuous(name = x_label,
expand = c(0,0),
breaks = seq(min(heatmap_data$weeknum,na.rm = T),
max(heatmap_data$weeknum,na.rm = T),
length = 13),
# minor_breaks = unique(heatmap_data$weeknum) %>% sort() , # TODO: add minor labels with weeknum see https://stackoverflow.com/questions/39717545/add-secondary-x-axis-labels-to-ggplot-with-one-x-axis
labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan")) +
ggplot2::scale_y_discrete(name = y_label,
expand = c(0, 0),
limits = (dayfactor+1)*dt_per_day - dt_per_day/2 + 1/fac + 0.5,
labels = rev(c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"))
)
firstDayMonth <- function(x) {
# https://www.r-bloggers.com/dates-in-r-and-the-first-day-of-the-month/
x = lubridate::date(as.character(x))
day = base::format(x,format = "%d")
monthYr = base::format(x,format = "%Y-%m")
y = base::tapply(day,monthYr, min)
first = zoo::as.Date(base::paste(base::row.names(y),y,sep = "-"))
base::as.factor(first)
}
ggplot2::ggplot()  +
ggplot2::geom_tile(data = heatmap_data
, aes(x = weeknum,
y = tile_ID,
fill = Data,
text = sprintf("Datetime: %s<br>tz: %s<br>Day: %s<br>Value: %f<br>Week: %f<br>ID: %f<br>Diffnum: %f"
,Datetime, tz, weekday, Data, weeknum, tile_ID, diff_num)
)
) +
ggplot2::theme(legend.position = "bottom") +
viridis::scale_fill_viridis(
limits = z_limits,
name = LegendTitle,# TODO: Legend name from function argument
option = 'D', # plasma "D" = viridis
direction = 1,
na.value = na.value.col,
guide = guide_colorbar(
direction = "horizontal",
barheight = unit(2, units = "mm"),
barwidth = unit(50, units = "mm"),
draw.ulim = F,
title.position = 'top',
# some shifting around
title.hjust = 0.5,
label.hjust = 0.5
)) +
# added if else to consider daylight shifting where one sunday has 25 instead of 24 hours
ggplot2::geom_hline(yintercept = (dayfactor+1)*dt_per_day + 2* 1/fac + 0.5,
color = "white") +
ggplot2::geom_point(data = subset(heatmap_data, Datetime %in% first_days),
aes(x = weeknum,y = tile_ID), pch = 3, color = "white") +
ggplot2::facet_wrap('plotyear', ncol = 1) +
ggplot2::scale_x_continuous(name = x_label,
expand = c(0,0),
breaks = seq(min(heatmap_data$weeknum,na.rm = T),
max(heatmap_data$weeknum,na.rm = T),
length = 13),
# minor_breaks = unique(heatmap_data$weeknum) %>% sort() , # TODO: add minor labels with weeknum see https://stackoverflow.com/questions/39717545/add-secondary-x-axis-labels-to-ggplot-with-one-x-axis
labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan")) +
ggplot2::scale_y_discrete(name = y_label,
expand = c(0, 0),
limits = (dayfactor+1)*dt_per_day - dt_per_day/2 + 1/fac + 0.5,
labels = rev(c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"))
)
# browser()
#TODO:  check number of columns of data.frame
#TODO:  check if datetime column is available & if it is POSIXct
#
#TODO: Check input data
#
# Check if data_colname is given:
if(is.null(data_colname)){
c_names <-
data %>%
dplyr::select(-(datetime_colname)) %>%
dplyr::select_if(is.numeric) %>%
base::colnames()
data_colname <- c_names[1] # choose first column of data frame if data_colname is.null
warning("data_colname argument empty: Choosing first numeric column named \"",data_colname,"\"")
}
# TODO: make it a function
dt_per_day <-
diff(data[,datetime_colname]) %>%
unique.POSIXlt() %>%
abs() %>%
min() %>%
(function(x){units(x) <- "days";return(x)}) %>%
as.numeric() %>%
`^`(.,-1)
# create weekday_hour_levels
weekdays_abbr <-
data$Datetime %>%
lubridate::wday(label = T, abbr = T, week_start = 1) %>%
levels()
ref_difftime <- as.difftime(1,units = "hours")
# timediff <- as.difftime(15,units = "mins") # testthat
timediff <- diff(data[,datetime_colname])
timediff_unit <- timediff %>% units()
#TODO: check if unique is of length 1 and which time difference to take if there are multiple
tdiff <- unique(timediff) %>% as.difftime(units = timediff_unit) %>% abs() %>% min()
units(tdiff) <- units(ref_difftime)
fac = as.numeric(tdiff)
dayfactor = c(d1 = 1
,d7 = 2
,d6 = 3
,d5 = 4
,d4 = 5
,d3 = 6
,d2 = 7)
heatmap_data <-
data %>%
dplyr::select((datetime_colname),
Data = (data_colname)) %>%
# #for testing purposes
# SBB_Consumption_2015 %>%
# select(Datetime
#        ,Data = Energie_SBB
# ) %>%
# ElDat_ohneKKW_mitPV %>%
# select(Datetime,Data = Cons_Total_Enduse_ControlBlock) %>%
# filter(year(Datetime) == 2016) %>%
dplyr::mutate(Datetime = lubridate::with_tz(Datetime,tzone = tzone)) %>%
dplyr::mutate(weeknum = lubridate::isoweek(Datetime)
,date = paste0(date(Datetime)," 00:00:00") %>%
as.POSIXct(tz=tzone)
,year = lubridate::year(Datetime)
,month = lubridate::month(Datetime)
,weeknum = as.numeric(strftime(date, format = "%V"))
,daylightsaving = lubridate::dst(Datetime)
) %>%
dplyr::group_by(weeknum) %>%
dplyr::mutate(weekly_datapoints = n()) %>%
dplyr::ungroup()
# Calculate everything on daily basis by grouping by weeks and days -----
(
heatmap_data <-
heatmap_data %>%
dplyr::group_by(weeknum,date) %>%
dplyr::mutate(
min_day_datetime = min(Datetime)
,tz = lubridate::tz(Datetime)
,diff_num = dt_per_day - (difftime(Datetime,date,units = units(tdiff)) %>% as.numeric(units=units(tdiff))/fac)
# ,tile_ID = dayfactor[paste0("d",wday(date))]*24+revcumsum(c(1,as.numeric(diff(Datetime))))) %>%
# dt_per_day = 24 hours per day or 48 half hours per day etc.
#original
# ,tile_ID = dayfactor[paste0("d",lubridate::wday(date))]*dt_per_day +
#   as.numeric(min_day_datetime - Datetime,
#              units = units(ref_difftime))/fac + 1/fac) %>%
# test
,tile_ID = dayfactor[paste0("d",lubridate::wday(date))]*dt_per_day + diff_num + 1/fac) %>%
dplyr::mutate(datapoints = dplyr::n()
,daylightsavinghours_per_day = sum(daylightsaving)
,is_day_of_timeshift = ifelse(!(daylightsavinghours_per_day %in% c(0,dt_per_day)),T,F)) %>%
# filter(is_day_of_timeshift & datapoints > 24) %>%
# cerrecting timeshifts of day light saving
#
#TODO: Daylight saving in october see: Ternadata
dplyr::mutate(tile_ID = dplyr::if_else(datapoints <= dt_per_day, tile_ID + 1/fac, tile_ID)
,tile_ID = dplyr::if_else(is_day_of_timeshift & datapoints > dt_per_day, tile_ID + 1/fac, tile_ID)
,tile_ID = dplyr::if_else(is_day_of_timeshift & daylightsaving & datapoints <= dt_per_day , tile_ID - 1/fac, tile_ID)) %>%
#
dplyr::ungroup() %>%
dplyr::mutate(
weekday = weekdays_abbr[lubridate::wday(x = date,week_start = getOption("lubridate.week.start",1))]
,plotyear = dplyr::if_else(weeknum == 53 & month == 1, year - 1, year)
,plotyear = dplyr::if_else(weeknum == 1 & month == 12, plotyear + 1, plotyear)
)
# filter(plotyear == 2016) # TODO: Week 53 in january days of next year
)
# Check if sundays can have 25 hours
has_timeshift = lubridate::dst(heatmap_data$Datetime) %>% any
if( is.null( z_limits ) | length(z_limits) != 2 & class(z_limits) == "numeric"){
z_limits = c(min(heatmap_data$Data,na.rm = T),max(heatmap_data$Data,na.rm = T))
}
# find id of first day in month
first_days <-
heatmap_data$Datetime %>%
firstDayMonth %>%
as.POSIXct(tz = lubridate::tz(heatmap_data$Datetime))
id_first_day = which(heatmap_data$Datetime %in% first_days)
data_first_day = data.frame(x = heatmap_data$weeknum[id_first_day],
y = heatmap_data$tile_ID[id_first_day],
year = heatmap_data$year[id_first_day])
# heatmap
heatmap_plotly <-
(
gg.obj <-
ggplot2::ggplot()  +
ggplot2::geom_tile(data = heatmap_data
, aes(x = weeknum,
y = tile_ID,
fill = Data,
text = sprintf("Datetime: %s<br>tz: %s<br>Day: %s<br>Value: %f<br>Week: %f<br>ID: %f<br>Diffnum: %f"
,Datetime, tz, weekday, Data, weeknum, tile_ID, diff_num)
)
) +
ggplot2::theme(legend.position = "bottom") +
viridis::scale_fill_viridis(
limits = z_limits,
name = LegendTitle,# TODO: Legend name from function argument
option = 'D', # plasma "D" = viridis
direction = 1,
na.value = na.value.col,
guide = guide_colorbar(
direction = "horizontal",
barheight = unit(2, units = "mm"),
barwidth = unit(50, units = "mm"),
draw.ulim = F,
title.position = 'top',
# some shifting around
title.hjust = 0.5,
label.hjust = 0.5
)) +
# added if else to consider daylight shifting where one sunday has 25 instead of 24 hours
ggplot2::geom_hline(yintercept = (dayfactor+1)*dt_per_day + 2* 1/fac + 0.5,
color = "white") +
ggplot2::geom_point(data = subset(heatmap_data, Datetime %in% first_days),
aes(x = weeknum,y = tile_ID), pch = 3, color = "white") +
ggplot2::facet_wrap('plotyear', ncol = 1) +
ggplot2::scale_x_continuous(name = x_label,
expand = c(0,0),
breaks = seq(min(heatmap_data$weeknum,na.rm = T),
max(heatmap_data$weeknum,na.rm = T),
length = 13),
# minor_breaks = unique(heatmap_data$weeknum) %>% sort() , # TODO: add minor labels with weeknum see https://stackoverflow.com/questions/39717545/add-secondary-x-axis-labels-to-ggplot-with-one-x-axis
labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan")) +
ggplot2::scale_y_discrete(name = y_label,
expand = c(0, 0),
limits = (dayfactor+1)*dt_per_day - dt_per_day/2 + 1/fac + 0.5,
labels = rev(c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"))
)
) %>%
plotly::ggplotly()
x_label = ""
y_label = ""
# heatmap
heatmap_plotly <-
(
gg.obj <-
ggplot2::ggplot()  +
ggplot2::geom_tile(data = heatmap_data
, aes(x = weeknum,
y = tile_ID,
fill = Data,
text = sprintf("Datetime: %s<br>tz: %s<br>Day: %s<br>Value: %f<br>Week: %f<br>ID: %f<br>Diffnum: %f"
,Datetime, tz, weekday, Data, weeknum, tile_ID, diff_num)
)
) +
ggplot2::theme(legend.position = "bottom") +
viridis::scale_fill_viridis(
limits = z_limits,
name = LegendTitle,# TODO: Legend name from function argument
option = 'D', # plasma "D" = viridis
direction = 1,
na.value = na.value.col,
guide = guide_colorbar(
direction = "horizontal",
barheight = unit(2, units = "mm"),
barwidth = unit(50, units = "mm"),
draw.ulim = F,
title.position = 'top',
# some shifting around
title.hjust = 0.5,
label.hjust = 0.5
)) +
# added if else to consider daylight shifting where one sunday has 25 instead of 24 hours
ggplot2::geom_hline(yintercept = (dayfactor+1)*dt_per_day + 2* 1/fac + 0.5,
color = "white") +
ggplot2::geom_point(data = subset(heatmap_data, Datetime %in% first_days),
aes(x = weeknum,y = tile_ID), pch = 3, color = "white") +
ggplot2::facet_wrap('plotyear', ncol = 1) +
ggplot2::scale_x_continuous(name = x_label,
expand = c(0,0),
breaks = seq(min(heatmap_data$weeknum,na.rm = T),
max(heatmap_data$weeknum,na.rm = T),
length = 13),
# minor_breaks = unique(heatmap_data$weeknum) %>% sort() , # TODO: add minor labels with weeknum see https://stackoverflow.com/questions/39717545/add-secondary-x-axis-labels-to-ggplot-with-one-x-axis
labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan")) +
ggplot2::scale_y_discrete(name = y_label,
expand = c(0, 0),
limits = (dayfactor+1)*dt_per_day - dt_per_day/2 + 1/fac + 0.5,
labels = rev(c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"))
)
) %>%
plotly::ggplotly()
ggplot2::ggplot()  +
ggplot2::geom_tile(data = heatmap_data
, aes(x = weeknum,
y = tile_ID,
fill = Data,
text = sprintf("Datetime: %s<br>tz: %s<br>Day: %s<br>Value: %f<br>Week: %f<br>ID: %f<br>Diffnum: %f"
,Datetime, tz, weekday, Data, weeknum, tile_ID, diff_num)
)
) +
ggplot2::theme(legend.position = "bottom") +
viridis::scale_fill_viridis(
limits = z_limits,
name = LegendTitle,# TODO: Legend name from function argument
option = 'D', # plasma "D" = viridis
direction = 1,
na.value = na.value.col,
guide = guide_colorbar(
direction = "horizontal",
barheight = unit(2, units = "mm"),
barwidth = unit(50, units = "mm"),
draw.ulim = F,
title.position = 'top',
# some shifting around
title.hjust = 0.5,
label.hjust = 0.5
)) +
# added if else to consider daylight shifting where one sunday has 25 instead of 24 hours
ggplot2::geom_hline(yintercept = (dayfactor+1)*dt_per_day + 2* 1/fac + 0.5,
color = "white") +
ggplot2::geom_point(data = subset(heatmap_data, Datetime %in% first_days),
aes(x = weeknum,y = tile_ID), pch = 3, color = "white") +
ggplot2::facet_wrap('plotyear', ncol = 1) +
ggplot2::scale_x_continuous(name = x_label,
expand = c(0,0),
breaks = seq(min(heatmap_data$weeknum,na.rm = T),
max(heatmap_data$weeknum,na.rm = T),
length = 13),
# minor_breaks = unique(heatmap_data$weeknum) %>% sort() , # TODO: add minor labels with weeknum see https://stackoverflow.com/questions/39717545/add-secondary-x-axis-labels-to-ggplot-with-one-x-axis
labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan")) +
ggplot2::scale_y_discrete(name = y_label,
expand = c(0, 0),
limits = (dayfactor+1)*dt_per_day - dt_per_day/2 + 1/fac + 0.5,
labels = rev(c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"))
)
(
gg.obj <-
ggplot2::ggplot()  +
ggplot2::geom_tile(data = heatmap_data
, aes(x = weeknum,
y = tile_ID,
fill = Data,
text = sprintf("Datetime: %s<br>tz: %s<br>Day: %s<br>Value: %f<br>Week: %f<br>ID: %f<br>Diffnum: %f"
,Datetime, tz, weekday, Data, weeknum, tile_ID, diff_num)
)
) +
ggplot2::theme(legend.position = "bottom") +
viridis::scale_fill_viridis(
limits = z_limits,
name = LegendTitle,# TODO: Legend name from function argument
option = 'D', # plasma "D" = viridis
direction = 1,
na.value = na.value.col,
guide = guide_colorbar(
direction = "horizontal",
barheight = unit(2, units = "mm"),
barwidth = unit(50, units = "mm"),
draw.ulim = F,
title.position = 'top',
# some shifting around
title.hjust = 0.5,
label.hjust = 0.5
)) +
# added if else to consider daylight shifting where one sunday has 25 instead of 24 hours
ggplot2::geom_hline(yintercept = (dayfactor+1)*dt_per_day + 2* 1/fac + 0.5,
color = "white") +
ggplot2::geom_point(data = subset(heatmap_data, Datetime %in% first_days),
aes(x = weeknum,y = tile_ID), pch = 3, color = "white") +
ggplot2::facet_wrap('plotyear', ncol = 1) +
ggplot2::scale_x_continuous(name = x_label,
expand = c(0,0),
breaks = seq(min(heatmap_data$weeknum,na.rm = T),
max(heatmap_data$weeknum,na.rm = T),
length = 13),
# minor_breaks = unique(heatmap_data$weeknum) %>% sort() , # TODO: add minor labels with weeknum see https://stackoverflow.com/questions/39717545/add-secondary-x-axis-labels-to-ggplot-with-one-x-axis
labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan")) +
ggplot2::scale_y_discrete(name = y_label,
expand = c(0, 0),
limits = (dayfactor+1)*dt_per_day - dt_per_day/2 + 1/fac + 0.5,
labels = rev(c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"))
)
) %>%
plotly::ggplotly()
ggplot2::ggplot()  +
ggplot2::geom_tile(data = heatmap_data
, aes(x = weeknum,
y = tile_ID,
fill = Data,
text = sprintf("Datetime: %s<br>tz: %s<br>Day: %s<br>Value: %f<br>Week: %f<br>ID: %f<br>Diffnum: %f"
,Datetime, tz, weekday, Data, weeknum, tile_ID, diff_num)
)
) +
ggplot2::theme(legend.position = "bottom") +
viridis::scale_fill_viridis(
limits = z_limits,
name = LegendTitle,# TODO: Legend name from function argument
option = 'D', # plasma "D" = viridis
direction = 1,
na.value = na.value.col,
guide = guide_colorbar(
direction = "horizontal",
barheight = unit(2, units = "mm"),
barwidth = unit(50, units = "mm"),
draw.ulim = F,
title.position = 'top',
# some shifting around
title.hjust = 0.5,
label.hjust = 0.5
)) +
# added if else to consider daylight shifting where one sunday has 25 instead of 24 hours
ggplot2::geom_hline(yintercept = (dayfactor+1)*dt_per_day + 2* 1/fac + 0.5,
color = "white") +
ggplot2::geom_point(data = subset(heatmap_data, Datetime %in% first_days),
aes(x = weeknum,y = tile_ID), pch = 3, color = "white") +
ggplot2::facet_wrap('plotyear', ncol = 1) +
ggplot2::scale_x_continuous(name = x_label,
expand = c(0,0),
breaks = seq(min(heatmap_data$weeknum,na.rm = T),
max(heatmap_data$weeknum,na.rm = T),
length = 13),
# minor_breaks = unique(heatmap_data$weeknum) %>% sort() , # TODO: add minor labels with weeknum see https://stackoverflow.com/questions/39717545/add-secondary-x-axis-labels-to-ggplot-with-one-x-axis
labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan")) +
ggplot2::scale_y_discrete(name = y_label,
expand = c(0, 0),
limits = (dayfactor+1)*dt_per_day - dt_per_day/2 + 1/fac + 0.5,
labels = rev(c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"))
)
(
gg.obj <-
ggplot2::ggplot()  +
ggplot2::geom_tile(data = heatmap_data
, aes(x = weeknum,
y = tile_ID,
fill = Data,
text = sprintf("Datetime: %s<br>tz: %s<br>Day: %s<br>Value: %f<br>Week: %f<br>ID: %f<br>Diffnum: %f"
,Datetime, tz, weekday, Data, weeknum, tile_ID, diff_num)
)
) +
ggplot2::theme(legend.position = "bottom") +
viridis::scale_fill_viridis(
limits = z_limits,
name = LegendTitle,# TODO: Legend name from function argument
option = 'D', # plasma "D" = viridis
direction = 1,
na.value = na.value.col,
guide = guide_colorbar(
direction = "horizontal",
barheight = unit(2, units = "mm"),
barwidth = unit(50, units = "mm"),
draw.ulim = F,
title.position = 'top',
# some shifting around
title.hjust = 0.5,
label.hjust = 0.5
)) +
# added if else to consider daylight shifting where one sunday has 25 instead of 24 hours
ggplot2::geom_hline(yintercept = (dayfactor+1)*dt_per_day + 2* 1/fac + 0.5,
color = "white") +
ggplot2::geom_point(data = subset(heatmap_data, Datetime %in% first_days),
aes(x = weeknum,y = tile_ID), pch = 3, color = "white") +
ggplot2::facet_wrap('plotyear', ncol = 1) +
ggplot2::scale_x_continuous(name = x_label,
expand = c(0,0),
breaks = seq(min(heatmap_data$weeknum,na.rm = T),
max(heatmap_data$weeknum,na.rm = T),
length = 13),
# minor_breaks = unique(heatmap_data$weeknum) %>% sort() , # TODO: add minor labels with weeknum see https://stackoverflow.com/questions/39717545/add-secondary-x-axis-labels-to-ggplot-with-one-x-axis
labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan")) +
ggplot2::scale_y_discrete(name = y_label,
expand = c(0, 0),
limits = (dayfactor+1)*dt_per_day - dt_per_day/2 + 1/fac + 0.5,
labels = rev(c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"))
)
) %>%
plotly::ggplotly()
